# Copyright (c) 2023-2024 Datalayer, Inc.
#
# BSD 3-Clause License

[build-system]
requires = ["hatchling~=1.21"]
build-backend = "hatchling.build"

[project]
name = "jupyter-mcp-server"
version = "2.0.0"
authors = [{ name = "Joseph", email = "your.email@example.com" }]
description = "A comprehensive Model Context Protocol server for Jupyter notebook integration with AI agents"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["Jupyter", "MCP", "AI", "Model Context Protocol", "Claude", "Notebooks"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Data Scientsts",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mcp>=1.0.0",
    "nbformat>=5.7.0",
    "jupyter>=1.0.0",
    "httpx>=0.25.0",
    "websockets>=11.0.0",
    "matplotlib>=3.7.0",
    "numpy>=1.24.0",
    "seaborn>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]
extras = [
    "pandas>=2.0.0",
    "plotly>=5.15.0",
]

[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://github.com/yourusername/jupyter-mcp-server"
Repository = "https://github.com/yourusername/jupyter-mcp-server"
Issues = "https://github.com/yourusername/jupyter-mcp-server/issues"
Documentation = "https://github.com/yourusername/jupyter-mcp-server/blob/main/README.md"

[project.scripts]
jupyter-mcp-server = "src.jupyter_mcp_server:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
  "error",
  "ignore:There is no current event loop:DeprecationWarning",
  "ignore:Jupyter is migrating its paths:DeprecationWarning",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Use of assert detected
